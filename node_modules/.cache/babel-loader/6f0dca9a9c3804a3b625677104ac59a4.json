{"ast":null,"code":"/**\n * This is the entry file of the Direflow setup.\n *\n * You can add any additional functionality here.\n * For example, this is a good place to hook into your\n * Web Component once it's mounted on the DOM.\n *\n * !This file cannot be removed.\n * It can be left blank if not needed.\n */\nimport AddComponent from './direflow-components/item-add-component';\nimport ListComponent from './direflow-components/item-list-component';\nimport { configureStore } from '@reduxjs/toolkit';\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('action: ', action);\n\n  switch (action.type) {\n    case \"add\":\n      return [...state, action.item];\n\n    case \"remove\":\n      return state.filter(s => s !== action.item);\n\n    default:\n      return state;\n  }\n};\n\nconst store = configureStore({\n  reducer: rootReducer\n});\nAddComponent.then(element => {\n  /**\n   * Access DOM node when it's mounted\n   */\n  console.log('item-add is mounted on the DOM', element);\n  element.addEventListener(\"add-item\", e => {\n    const currentList = store.getState(); // Prevent duplicates\n\n    if (currentList.includes(e.detail)) {\n      return;\n    }\n\n    console.log('asdas', \"====\", e.detail, \"===\", store);\n    store.dispatch({\n      type: \"add\",\n      item: e.detail\n    });\n    console.log('store data: ', currentList);\n  });\n  element.addEventListener(\"remove-item\", e => {\n    store.dispatch({\n      type: \"remove\",\n      item: e.detail\n    });\n  });\n  store.subscribe(() => {\n    const currentList = store.getState();\n    console.log(\"currentList: \", currentList);\n    element.sampleList = currentList;\n  });\n});","map":{"version":3,"names":["AddComponent","ListComponent","configureStore","rootReducer","state","action","console","log","type","item","filter","s","store","reducer","then","element","addEventListener","e","currentList","getState","includes","detail","dispatch","subscribe","sampleList"],"sources":["/home/monica.s@ah.zymrinc.com/task-management/task-management/src/index.js"],"sourcesContent":["/**\n * This is the entry file of the Direflow setup.\n *\n * You can add any additional functionality here.\n * For example, this is a good place to hook into your\n * Web Component once it's mounted on the DOM.\n *\n * !This file cannot be removed.\n * It can be left blank if not needed.\n */\n\nimport AddComponent from './direflow-components/item-add-component';\nimport ListComponent from './direflow-components/item-list-component';\nimport { configureStore } from '@reduxjs/toolkit';\n\nconst rootReducer = (state = [], action) => {\n  console.log('action: ', action);\n  switch (action.type) {\n    case \"add\":\n      return [...state, action.item];\n    case \"remove\":\n      return state.filter(s => s !== action.item);\n    default:\n      return state;\n  }\n};\n\nconst store = configureStore({ reducer: rootReducer });\n\nAddComponent.then((element) => {\n\n  /**\n   * Access DOM node when it's mounted\n   */\n  console.log('item-add is mounted on the DOM', element);\n  element.addEventListener(\"add-item\", e => {\n    \n    const currentList = store.getState();\n\n    // Prevent duplicates\n    if (currentList.includes(e.detail)) {\n      return;\n    }\n    console.log('asdas',\"====\",e.detail,\"===\",store)\n    store.dispatch({ type: \"add\", item: e.detail });\n    console.log('store data: ', currentList);\n  });\n  element.addEventListener(\"remove-item\", (e) => {\n    store.dispatch({ type: \"remove\", item: e.detail });\n  });\n  store.subscribe(() => {\n    const currentList = store.getState();\n    console.log(\"currentList: \", currentList);\n    element.sampleList = currentList;\n  });\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,YAAP,MAAyB,0CAAzB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,WAAW,GAAG,YAAwB;EAAA,IAAvBC,KAAuB,uEAAf,EAAe;EAAA,IAAXC,MAAW;EAC1CC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;;EACA,QAAQA,MAAM,CAACG,IAAf;IACE,KAAK,KAAL;MACE,OAAO,CAAC,GAAGJ,KAAJ,EAAWC,MAAM,CAACI,IAAlB,CAAP;;IACF,KAAK,QAAL;MACE,OAAOL,KAAK,CAACM,MAAN,CAAaC,CAAC,IAAIA,CAAC,KAAKN,MAAM,CAACI,IAA/B,CAAP;;IACF;MACE,OAAOL,KAAP;EANJ;AAQD,CAVD;;AAYA,MAAMQ,KAAK,GAAGV,cAAc,CAAC;EAAEW,OAAO,EAAEV;AAAX,CAAD,CAA5B;AAEAH,YAAY,CAACc,IAAb,CAAmBC,OAAD,IAAa;EAE7B;AACF;AACA;EACET,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CQ,OAA9C;EACAA,OAAO,CAACC,gBAAR,CAAyB,UAAzB,EAAqCC,CAAC,IAAI;IAExC,MAAMC,WAAW,GAAGN,KAAK,CAACO,QAAN,EAApB,CAFwC,CAIxC;;IACA,IAAID,WAAW,CAACE,QAAZ,CAAqBH,CAAC,CAACI,MAAvB,CAAJ,EAAoC;MAClC;IACD;;IACDf,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,MAApB,EAA2BU,CAAC,CAACI,MAA7B,EAAoC,KAApC,EAA0CT,KAA1C;IACAA,KAAK,CAACU,QAAN,CAAe;MAAEd,IAAI,EAAE,KAAR;MAAeC,IAAI,EAAEQ,CAAC,CAACI;IAAvB,CAAf;IACAf,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BW,WAA5B;EACD,CAXD;EAYAH,OAAO,CAACC,gBAAR,CAAyB,aAAzB,EAAyCC,CAAD,IAAO;IAC7CL,KAAK,CAACU,QAAN,CAAe;MAAEd,IAAI,EAAE,QAAR;MAAkBC,IAAI,EAAEQ,CAAC,CAACI;IAA1B,CAAf;EACD,CAFD;EAGAT,KAAK,CAACW,SAAN,CAAgB,MAAM;IACpB,MAAML,WAAW,GAAGN,KAAK,CAACO,QAAN,EAApB;IACAb,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BW,WAA7B;IACAH,OAAO,CAACS,UAAR,GAAqBN,WAArB;EACD,CAJD;AAKD,CA1BD"},"metadata":{},"sourceType":"module"}